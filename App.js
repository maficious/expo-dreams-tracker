import { NavigationContainer } from "@react-navigation/native";
import { createStackNavigator } from "@react-navigation/stack";
import React, { useEffect, useState } from "react";
import { AsyncStorage, Text, StyleSheet, TouchableOpacity, View } from "react-native";
import { Ionicons } from "@expo/vector-icons";
import { SafeAreaProvider, SafeAreaView } from "react-native-safe-area-context";
import DreamDetails from "./src/views/DreamDetails";
import Home from "./src/views/Home";
import CreateDream from "./src/views/CreateDream";
import EditDream from "./src/views/EditDream";
import localizations from "./assets/i18n/localizations";

const RootStack = createStackNavigator();
const MainStack = createStackNavigator();

export default function App() {
	const [isFirstRun, setIsFirstRun] = useState(true);

	function get_is_first_run() {
		AsyncStorage.getItem("isFirstRun", (error, result) => {
			console.log("GET isFirstRun");
			if (error) 	console.log("\t| ERR:", error);
			if (result) console.log("\t| RES:", result);
		}).then(value => {
			let answer = JSON.parse(value);
			// console.log("is it first run? " + answer.isFirstRun);
			if (answer === null || answer === undefined) {
				setIsFirstRun(true);
			} else {
				setIsFirstRun(false);
			}
		});
	}

	useEffect(() => {
		// get_is_first_run();
	}, []);

	return (
		<SafeAreaProvider>
			<NavigationContainer>
				<RootStack.Navigator initialRouteName={isFirstRun ? "intro0" : "MainApp"}>
					<RootStack.Screen name="intro0"  component={Intro0}  options={{ headerShown: false }} />
					<RootStack.Screen name="intro1"  component={Intro1}  options={{ headerShown: false }} />
					<RootStack.Screen name="intro2"  component={Intro2}  options={{ headerShown: false }} />
					<RootStack.Screen name="intro3"  component={Intro3}  options={{ headerShown: false }} />
					<RootStack.Screen name="intro4"  component={Intro4}  options={{ headerShown: false }} />
					{/* Main app, previous screens should never ever appear after the first run */}
					<RootStack.Screen name="MainApp" component={MainApp} options={{ headerShown: false }} />
				</RootStack.Navigator>
			</NavigationContainer>
		</SafeAreaProvider>
	);
}

function Intro0({ navigation }) {
	return (
		<SafeAreaView style={[introStyles.container, { backgroundColor: "#25C6DF" }]}>
			<Text style={[introStyles.text, { fontSize: 36, textAlign: "right" }]}>
				–ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–≥!{"\n"}–†–∞–¥–∞ —Ç–µ–±–µ ü§ó
			</Text>
			<Text style={introStyles.text}>
				–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ. –≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ª—É—á—à–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —Å–µ–±–µ. –û–Ω–æ –±—É–¥–µ—Ç
				–Ω–µ–∑–∞–º–µ–Ω–∏–º—ã–º –ø–æ–º–æ—â–Ω–∏–∫–æ–º –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ç–µ—Ä–∞–ø–∏–∏, –µ—Å–ª–∏ —Ç—ã –≤ –Ω–µ–π –Ω–∞—Ö–æ–¥–∏—à—å—Å—è, –∞ —Ç–∞–∫–∂–µ –≤ —Ç—Ä—É–¥–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã –∂–∏–∑–Ω–∏ –∏–ª–∏
				–≤ –ª—é–±–æ–π –¥—Ä—É–≥–æ–π –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–∏, –∫–æ–≥–¥–∞ –∑–∞—Ö–æ—á–µ—à—å –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–µ–æ–±—ä—è—Ç–Ω—ã–º –º–∏—Ä–æ–º –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º ¬´–Ø —Å–∞–º(–∞)¬ª.
			</Text>
			<TouchableOpacity style={introStyles.nextButtonContainer} onPress={() => navigation.navigate("intro1")}>
				<Text style={introStyles.nextButtonText}>{localizations.IntroNextButtonText}</Text>
			</TouchableOpacity>
		</SafeAreaView>
	);
}
function Intro1({ navigation }) {
	return (
		<SafeAreaView style={[introStyles.container, { backgroundColor: "#DE6B10" }]}>
			<Text style={[introStyles.text, { fontSize: 36, textAlign: "center" }]}>–ù–µ —Å–µ–∫—Ä–µ—Ç...</Text>
			<Text style={introStyles.text}>
				...—á—Ç–æ –Ω–∞—à–µ —Å–æ–∑–Ω–∞–Ω–∏–µ —ç—Ç–æ –≤—Å–µ–≥–æ –ª–∏—à—å –≤–µ—Ä—Ö—É—à–∫–∞ –∞–π—Å–±–µ—Ä–≥–∞ –∏ –ø–æ–≤–µ–¥–µ–Ω–∏–∏ —á–µ–ª–æ–≤–µ–∫–∞ –æ—á–µ–Ω—å —Å–∏–ª—å–Ω–æ –≤–ª–∏—è–µ—Ç
				–ø–æ–¥—Å–æ–∑–Ω–∞–Ω–∏–µ. –°–Ω—ã ‚Äî —ç—Ç–æ –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–æ—Ä–º–∞—Ç —Ç–æ–≥–æ —á—Ç–æ —Ç–≤–æ—Ä–∏—Ç—Å—è —É —Ç–µ–±—è –≤ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–º. –≠—Ç–æ —Å–≤–æ–µ–≥–æ
				—Ä–æ–¥–∞, –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–≤–æ–¥–∫–∏ —Å –ø–æ–ª–µ–π –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ. üòé
			</Text>
			<TouchableOpacity style={introStyles.nextButtonContainer} onPress={() => navigation.navigate("intro2")}>
				<Text style={introStyles.nextButtonText}>{localizations.IntroNextButtonText}</Text>
			</TouchableOpacity>
		</SafeAreaView>
	);
}

const Check = () => (
	<View style={{ margin: 10 }}>
		<Ionicons name="ios-checkmark-circle-outline" size={20} color="white" />
	</View>
);

function Intro2({ navigation }) {
	return (
		<SafeAreaView style={[introStyles.container, { backgroundColor: "#B33CDE" }]}>
			<Text style={[introStyles.text, { fontSize: 36, textAlign: "center" }]}>
				–ß—Ç–æ —Ç–µ–±–µ –º–æ–∂–µ—Ç –¥–∞—Ç—å —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:
			</Text>
			<Text style={[introStyles.text, { textAlign: "left" }]}>
				‚Ä¢ –¢—ã —Å–º–æ–∂–µ—à—å —Å–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Å–Ω—ã. {"\n"}‚Ä¢ –°–º–æ–∂–µ—à—å –±—ã—Å—Ç—Ä–æ ¬´–¥–æ—Å—Ç–∞–≤–∞—Ç—å¬ª –Ω—É–∂–Ω—ã–µ —Å–Ω—ã –ø–æ –∫–ª—é—á–µ–≤—ã–º
				—Å–ª–æ–≤–∞–º.{"\n"}‚Ä¢ –°–º–æ–∂–µ—à—å –ª—É—á—à–µ —Ä–µ—Ñ–ª–µ–∫—Å–∏—Ä–æ–≤–∞—Ç—å –ø–æ –ø–æ–≤–æ–¥—É —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å—ã–ª–∞–µ—Ç —Ç–µ–±–µ —Ç–≤–æ–µ
				–ë–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–µ.
			</Text>
			<TouchableOpacity style={introStyles.nextButtonContainer} onPress={() => navigation.navigate("intro3")}>
				<Text style={introStyles.nextButtonText}>{localizations.IntroNextButtonText}</Text>
			</TouchableOpacity>
		</SafeAreaView>
	);
}

function Intro3({ navigation }) {
	return (
		<SafeAreaView style={[introStyles.container, { backgroundColor: "#E05147" }]}>
			<Text style={[introStyles.text, { fontSize: 36, textAlign: "center" }]}>
				–ö–∞–∫ –ª—É—á—à–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º:
			</Text>
			<Text style={[introStyles.text, { textAlign: "left" }]}>
				‚Ä¢ –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å —Å–≤–æ–∏ —Å–Ω—ã, –∏ —Å–æ–±—ã—Ç–∏—è, –ø—Ä–æ–∏–∑–æ—à–µ–¥—à–∏–µ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –ø–µ—Ä–µ–¥ —Å–Ω–æ–º, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏
				–ø–æ–≤–ª–∏—è—Ç—å –Ω–∞ —Å–æ–Ω, –Ω–∞ –µ–≥–æ —Ñ–æ—Ä–º—ã, —Å–∏–º–≤–æ–ª—ã –∏ –æ–±—Ä–∞–∑—ã. {"\n"}‚Ä¢ –í—ã—Å—Ç–∞–≤–ª—è—Ç—å –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞. {"\n"}‚Ä¢ –ò—Å–∫–∞—Ç—å
				—ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∑–Ω–∞—á–∏–º—ã–µ —Å–ª–æ–≤–∞.{"\n"}‚Ä¢ –°–∏—Å—Ç–µ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ —Å–Ω—ã –∏ –≤–∏–¥–µ—Ç—å –¥–∏–Ω–∞–º–∏–∫—É —Ç–æ–≥–æ, —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —É
				—Ç–µ–±—è –≤ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–º. {"\n"}‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—ã—Ö ¬´–ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è¬ª (—Ä–µ–∫—É—Ä–µ–Ω—Ç–Ω—ã—Ö) —Å–Ω–æ–≤.
				{"\n"}‚Ä¢ –í–∏–¥–µ—Ç—å –¥–∏–Ω–∞–º–∏–∫—É –∏ —É–ª—É—á—à–µ–Ω–∏—è —Å–≤–æ–µ–≥–æ –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞, –µ—Å–ª–∏ —Ç—ã –Ω–∞—Ö–æ–¥–∏—à—å—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ
				–ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏.
			</Text>
			<TouchableOpacity style={introStyles.nextButtonContainer} onPress={() => navigation.navigate("intro4")}>
				<Text style={introStyles.nextButtonText}>{localizations.IntroNextButtonText}</Text>
			</TouchableOpacity>
		</SafeAreaView>
	);
}

function Intro4({ navigation }) {
	return (
		<SafeAreaView style={[introStyles.container, { backgroundColor: "#25C261" }]}>
			<Text style={[introStyles.text, { fontSize: 36, textAlign: "center" }]}>
				–ö–∞–∫–æ–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Å–º—ã—Å–ª —ç—Ç–æ –º–æ–∂–µ—Ç –∏–º–µ—Ç—å?!
			</Text>
			<Text style={[introStyles.text, { fontSize: 16 }]}>
				–ß–∞—Å—Ç–æ —á–µ—Ä–µ–∑ —Å–Ω—ã —Å –Ω–∞–º–∏ —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞–µ—Ç –Ω–∞—à–∞ –ò–Ω—Ç—É–∏—Ü–∏—è. –ß—Ç–æ–±—ã —Ä–∞–∑–≤–∏–≤–∞—Ç—å –∏–Ω—Ç—É–∏—Ü–∏—é –≤–∞–∂–Ω–æ —É–º–µ—Ç—å –µ–µ —Å–ª—ã—à–∞—Ç—å –∏
				—Å–ª—É—à–∞—Ç—å. –ò–Ω—Ç—É–∏—Ü–∏—è ‚Äî –∫–∞–∫ –Ø–Ω–¥–µ–∫—Å-–Ω–∞–≤–∏–≥–∞—Ç–æ—Ä –Ω–∞ –∂–∏–∑–Ω–µ–Ω–Ω–æ–º –ø—É—Ç–∏, –ø–æ–∑–≤–æ–ª–∏—Ç –Ω–µ —Å–≤–æ—Ä–∞—á–∏–≤–∞—Ç—å –≤ —Ç—É–ø–∏–∫–∏, –Ω–µ
				–≤—Å—Ç–∞–≤–∞—Ç—å –≤ –ø—Ä–æ–±–∫–∏, –Ω–µ –ø—Ä–µ–≤—ã—à–∞—Ç—å —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –≤—ã–±–∏—Ä–∞—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ. –ß–∏—Ç–∞—Ç—å —Å–Ω—ã ‚Äî —ç—Ç–æ, –ø–æ–∂–∞–ª—É–π,
				–ª—É—á—à–∏–π —Å–ø–æ—Å–æ–± —Å–ª—ã—à–∞—Ç—å –∏–Ω—Ç—É–∏—Ü–∏—é.
			</Text>
			<Text
				style={[
					introStyles.text,
					{ fontStyle: "italic", fontSize: 20, textAlign: "right", alignSelf: "flex-end" }
				]}>
				‚Äî –ö–∞–º–∏–Ω–∞—Ç –ö–∞—Å–∏–º–æ–≤–∞, –ø—Å–∏—Ö–æ–ª–æ–≥.
			</Text>
			<TouchableOpacity style={introStyles.nextButtonContainer} onPress={() => navigation.navigate("MainApp")}>
				<Text style={introStyles.nextButtonText}>{localizations.IntroNextButtonText}</Text>
			</TouchableOpacity>
		</SafeAreaView>
	);
}

const introStyles = StyleSheet.create({
	container: {
		flex       : 1,
		alignItems : "center"
	},
	nextButtonContainer: {
		backgroundColor   : "rgba(255,255,255,.2)",
		paddingVertical   : 10,
		paddingHorizontal : 20,
		borderRadius      : 10,
		position          : "absolute",
		bottom            : 60
	},
	nextButtonText: {
		color    : "white",
		fontSize : 18
	},
	text: {
		color         : "white",
		textAlign     : "justify",
		fontSize      : 18,
		padding       : 20,
		paddingBottom : 5
	}
});

function MainApp() {
	async function set_is_not_first_run() {
		AsyncStorage.setItem("isFirstRun", JSON.stringify({ isFirstRun: false }), (error, result) => {
			console.log("SET isFirstRun");
			if (error)  console.log("\t| ERR:", error);
			if (result) console.log("\t| RES:", result);
		});
	}

	useEffect(() => {
		set_is_not_first_run();
	}, []);

	return (
		<MainStack.Navigator mode="modal" initialRouteName="Home">
			<MainStack.Screen
                name      = "Home"
                component = {Home}
                options   = {{ title: localizations.DreamsListHeaderTitle }} />
			<MainStack.Screen
				name      = "CreateDream"
				component = {CreateDream}
				options   = {{ title: localizations.CreateDreamHeaderTitle }}
			/>
			<MainStack.Screen
				name      = "EditDream"
				component = {EditDream}
				options   = {{ title: localizations.EditDreamHeaderTitle }}
			/>
			<MainStack.Screen
				name      = "DreamDetails"
				component = {DreamDetails}
				options   = {{ title: localizations.DreamDetailsHeaderTitle }}
			/>
		</MainStack.Navigator>
	);
}
